// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Booking {
  id           String   @id @default(cuid())
  name         String
  phone        String?
  email        String
  location     String
  proposedDate String
  budget       String?
  hearAbout    String?
  eventType    String[]
  message      String
  status       BookingStatus @default(PENDING)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("bookings")
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      UserRole @default(CLIENT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

enum UserRole {
  ADMIN
  CLIENT
}

model Photo {
  id          String      @id @default(cuid())
  filename    String
  originalName String
  mimeType    String
  size        Int
  url         String
  category    PhotoCategory @default(GALLERY)
  isPublic    Boolean     @default(true)
  uploadedAt  DateTime    @default(now())

  @@map("photos")
}

enum PhotoCategory {
  GALLERY
  PORTFOLIO
  TESTIMONIAL
}

model Invoice {
  id        String   @id @default(cuid())
  email     String
  eventType String
  amount    Decimal  @db.Decimal(10, 2)
  duration  String
  date      DateTime
  location  String
  status    InvoiceStatus @default(DRAFT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("invoices")
}

enum InvoiceStatus {
  DRAFT
  SENT
  PAID
  CANCELLED
  OVERDUE
}
